@using Markdig.Syntax.Inlines
@using MyPageOnGitHub.Code

@inject ILoggerFactory LoggerFactory

<MudMarkdown 
	Value="@Value"
	Styling="Styling"
	Props="Props"
	HasTableOfContents="HasTableOfContents"
	TableOfContentsHeader="Table of contents" />

@code
{
	[Parameter]
	public MarkdownResourceType MarkdownResource { get; set; }

	[Parameter]
	public int ItemIndex { get; set; }

	[Parameter]
	public bool HasTableOfContents { get; set; }

	[Inject]
	private IMarkdownService MarkdownService { get; init; } = null!;

	private string Value { get; set; } = string.Empty;

    private ILogger Logger => LoggerFactory.CreateLogger<MarkdownPage>();

	private MudMarkdownStyling Styling { get; } = new()
	{
		Table =
		{
			CellMinWidth = 100,
		},
		CodeBlock =
		{
			Theme = CodeBlockTheme.A11yDark,
			CopyButton = CodeBlockCopyButton.Sticky,
			CopyButtonText = "Vâng tôi đã sao chép xong rồi ạ!",
		},
	};

	private MudMarkdownProps Props { get; } = new()
	{
		Link =
		{
			OverrideUrl = OverrideUrl,
		},
		Heading =
		{
			OverrideTypo = OverrideTypo,
		},
	};

	protected override async Task OnParametersSetAsync()
	{
        Logger.LogInformation(
			"Loading markdown resource {MarkdownResource} index {ItemIndex}", 
			MarkdownResource, ItemIndex);

		Value = await MarkdownService.GetBlogEntryAsync(MarkdownResource, ItemIndex)
			.ConfigureAwait(false);
    }


	/// <remarks>
	/// replaces all h1 tags with h4
	/// </remarks>
	private static Typo OverrideTypo(Typo x)
	{
		return x == Typo.h1 ? Typo.h4 : x;
	}

	private static string? OverrideUrl(LinkInline x)
	{
		return x.Url;
	}

}